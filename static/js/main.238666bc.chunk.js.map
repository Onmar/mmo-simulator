{"version":3,"sources":["state/ducks/todos/todos.models.ts","views/todos-list/link.component.tsx","state/ducks/todos/todos.actions.ts","views/todos-list/link.container.tsx","views/todos-list/footer.component.tsx","views/todos-list/todo.component.tsx","state/ducks/todos/todos.selectors.ts","views/todos-list/todos-list.container.tsx","views/todos-list/todos-list.component.tsx","views/todos-list/add-todo.container.tsx","views/todos-list/add-todo.component.tsx","views/App.tsx","state/utils.ts","state/ducks/todos/todos.reducer.ts","state/root-reducer.ts","state/store.ts","index.tsx"],"names":["TodosFilter","todosActions","add","createStandardAction","map","payload","Object","objectSpread","id","cuid","completed","toggle","changeFilter","FilterLink","connect","state","ownProps","active","todos","todosFilter","filter","dispatch","onClick","props","children","react_default","a","createElement","e","preventDefault","disabled","style","marginLeft","Footer","objectDestructuringEmpty","ALL","ACTIVE","COMPLETED","Todo","text","textDecoration","getTodos","getTodosFilter","todosSelectors","getFilteredTodos","createSelector","t","VisibleTodoList","onTodoClick","length","todo","todo_component_Todo","assign","key","AddTodo","onSubmit","input","value","trim","ref","node","type","App","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","className","footer_component_Footer","Component","composeEnhancers","compose","todosReducer","combineReducers","undefined","action","getType","concat","toConsumableArray","item","rootReducer","enhancer","applyMiddleware","store","createStore","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.238666bc.chunk.js","sourcesContent":["export interface Todo {\r\n    id: string;\r\n    text: string;\r\n    completed: boolean;\r\n}\r\n\r\nexport enum TodosFilter {\r\n    ALL = \"Show All\",\r\n    COMPLETED = \"Completed\",\r\n    ACTIVE = \"Active\",\r\n}","import React from 'react'\r\n\r\ntype Props = {\r\n    active: boolean;\r\n    onClick: () => any;\r\n}\r\n\r\nexport const Link: React.FC<Props> = props => {\r\n    const { active, children, onClick } = props;\r\n\r\n    const handleClick = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        onClick();\r\n    };\r\n\r\n    return (\r\n        <button\r\n            onClick={handleClick}\r\n            disabled={active}\r\n            style={{\r\n                marginLeft: '4px'\r\n            }}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n\r\n};","import {createStandardAction} from \"typesafe-actions\";\r\nimport {Todo, TodosFilter} from \"./todos.models\";\r\nimport cuid from 'cuid';\r\n\r\nconst ADD = '@todos/ADD';\r\nconst TOGGLE = '@todos/TOGGLE';\r\nconst CHANGE_FILTER = '@todos/CHANGE_FILTER';\r\n\r\nconst add = createStandardAction(ADD).map(\r\n    (payload: { text: string }) => ({\r\n        payload: {\r\n            ...payload,\r\n            id: cuid(),\r\n            completed: false,\r\n        } as Todo,\r\n    })\r\n);\r\n\r\nconst toggle = createStandardAction(TOGGLE)<{ id: string }>();\r\n\r\nconst changeFilter = createStandardAction(CHANGE_FILTER)<TodosFilter>();\r\n\r\nexport const todosActions = {\r\n    add,\r\n    toggle,\r\n    changeFilter\r\n};","import * as MyTypes from \"MyTypes\";\r\nimport {TodosFilter} from \"../../state/ducks/todos/todos.models\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"./link.component\";\r\nimport {todosActions} from \"../../state/ducks/todos/todos.actions\";\r\n\r\ntype OwnProps = {\r\n    filter: TodosFilter;\r\n}\r\n\r\nconst mapStateToProps = (state: MyTypes.RootState, ownProps: OwnProps) => ({\r\n    active: state.todos.todosFilter === ownProps.filter\r\n});\r\n\r\nexport const FilterLink = connect(\r\n    mapStateToProps,\r\n    ((dispatch, ownProps) => {\r\n        return {\r\n            onClick: () => dispatch(todosActions.changeFilter(ownProps.filter)),\r\n        }\r\n    })\r\n)(Link);","import React from 'react'\r\nimport {TodosFilter} from \"../../state/ducks/todos/todos.models\";\r\nimport {FilterLink} from \"./link.container\";\r\n\r\ntype Props = {\r\n}\r\n\r\nexport const Footer: React.FC<Props> = props => {\r\n    const {} = props;\r\n\r\n    return (\r\n        <p>\r\n            <span>Show: </span>\r\n            <FilterLink filter={TodosFilter.ALL}>All</FilterLink>\r\n            <FilterLink filter={TodosFilter.ACTIVE}>Active</FilterLink>\r\n            <FilterLink filter={TodosFilter.COMPLETED}>Completed</FilterLink>\r\n        </p>\r\n    )\r\n\r\n};","import React from 'react'\r\n\r\ntype Props = {\r\n    onClick: () => any;\r\n    completed: boolean;\r\n    text: string;\r\n}\r\n\r\nexport const Todo: React.FC<Props> = props => {\r\n    const {onClick, completed, text} = props;\r\n\r\n    const handleClick = () => {\r\n        onClick();\r\n    };\r\n\r\n    return (\r\n        <li\r\n            onClick={handleClick}\r\n            style={{\r\n                textDecoration: completed ? 'line-through' : 'none'\r\n            }}\r\n        >\r\n            {text}\r\n        </li>\r\n    )\r\n};","import {createSelector} from \"reselect\";\r\n\r\nimport {TodosState} from \"./todos.reducer\";\r\nimport {TodosFilter} from \"./todos.models\";\r\n\r\nconst getTodos = (state: TodosState) => state.todos;\r\n\r\nconst getTodosFilter = (state: TodosState) => state.todosFilter;\r\n\r\nconst getFilteredTodos = createSelector(getTodos, getTodosFilter, (todos, todosFilter) => {\r\n    switch(todosFilter) {\r\n        case TodosFilter.ALL:\r\n            return todos;\r\n        case TodosFilter.ACTIVE:\r\n            return todos.filter(t => !t.completed);\r\n        case TodosFilter.COMPLETED:\r\n            return todos.filter(t => t.completed);\r\n    }\r\n});\r\n\r\nexport const todosSelectors = {\r\n    getTodos,\r\n    getTodosFilter,\r\n    getFilteredTodos,\r\n};","import * as MyTypes from \"MyTypes\";\r\nimport {connect} from \"react-redux\";\r\nimport {TodosList} from \"./todos-list.component\";\r\nimport {todosSelectors} from \"../../state/ducks/todos/todos.selectors\";\r\nimport {todosActions} from \"../../state/ducks/todos/todos.actions\";\r\n\r\n\r\nconst mapStateToProps = (state: MyTypes.RootState) => ({\r\n    todos: todosSelectors.getFilteredTodos(state.todos),\r\n});\r\n\r\nexport const VisibleTodoList = connect(\r\n    mapStateToProps,\r\n    {\r\n        onTodoClick: todosActions.toggle\r\n    }\r\n)(TodosList);\r\n","import React from 'react';\r\n\r\nimport {Todo as TodoType} from \"../../state/ducks/todos/todos.models\";\r\nimport {Todo} from \"./todo.component\";\r\n\r\ntype Props = {\r\n    todos: Array<TodoType>;\r\n    onTodoClick: ({ id }: { id: string }) => any;\r\n};\r\n\r\nexport const TodosList: React.FC<Props> = props => {\r\n    const { todos, onTodoClick } = props;\r\n\r\n    const handleTodoClick = (id: string) => {\r\n        onTodoClick({ id: id });\r\n    };\r\n\r\n    if(todos.length == 0) {\r\n        return <ul>\r\n            <li>No Entries</li>\r\n        </ul>\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            {todos.map(todo => (\r\n                <Todo key={todo.id} {...todo} onClick={() => handleTodoClick(todo.id)} />\r\n            ))}\r\n        </ul>\r\n    )\r\n\r\n};","import {AddTodoComponent} from \"./add-todo.component\";\r\nimport {connect} from \"react-redux\";\r\nimport {todosActions} from \"../../state/ducks/todos/todos.actions\";\r\n\r\nexport const AddTodo = connect(null, {\r\n    onSubmit: todosActions.add\r\n})(AddTodoComponent);","import React from 'react'\r\n\r\ntype Props = {\r\n    onSubmit: (payload: {text: string}) => any;\r\n}\r\n\r\nexport const AddTodoComponent: React.FC<Props> = props => {\r\n    const { onSubmit } = props;\r\n\r\n    let input: HTMLInputElement;\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (!input.value.trim()) {\r\n            return;\r\n        }\r\n        onSubmit({text: input.value});\r\n        input.value = '';\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n              onSubmit={handleSubmit}\r\n            >\r\n                <input\r\n                    ref={node => {\r\n                        if(node) {\r\n                            input = node\r\n                        }\r\n                    }}\r\n                />\r\n                <button type=\"submit\">Add Todo</button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Footer} from \"./todos-list/footer.component\";\r\nimport {VisibleTodoList} from \"./todos-list/todos-list.container\";\r\nimport {AddTodo} from \"./todos-list/add-todo.container\";\r\n\r\nimport './App.css';\r\n\r\nexport class App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div>\r\n                    <AddTodo/>\r\n                    <VisibleTodoList/>\r\n                    <Footer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { compose } from 'redux';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nexport const composeEnhancers =\r\n    (process.env.NODE_ENV === 'development' &&\r\n        window &&\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose;\r\n/* eslint-enable */\r\n","import {Todo, TodosFilter} from \"./todos.models\";\r\nimport {ActionType, getType} from \"typesafe-actions\";\r\n\r\nimport {combineReducers, Reducer} from \"redux\";\r\nimport {todosActions} from \"./todos.actions\";\r\n\r\nexport type TodosState = {\r\n    readonly todos: Todo[];\r\n    readonly todosFilter: TodosFilter;\r\n}\r\n\r\nexport type TodosAction = ActionType<typeof todosActions>;\r\n\r\nconst todosListReducer: Reducer<Todo[], TodosAction> = (state = [], action) => {\r\n    switch (action.type) {\r\n        case getType(todosActions.add):\r\n            return [...state, action.payload];\r\n\r\n        case getType(todosActions.toggle):\r\n            return state.map(item => (item.id === action.payload.id ? {...item, completed: !item.completed} : item));\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst todosFilterReducer: Reducer<TodosFilter, TodosAction> = (state = TodosFilter.ALL, action) => {\r\n    switch(action.type) {\r\n        case getType(todosActions.changeFilter):\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const todosReducer = combineReducers<TodosState, TodosAction>({\r\n    todos: todosListReducer,\r\n    todosFilter: todosFilterReducer\r\n});","import { combineReducers } from 'redux';\r\nimport {todosReducer} from \"./ducks/todos/todos.reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    todos: todosReducer\r\n});","import {applyMiddleware, createStore, Middleware} from \"redux\";\r\nimport {composeEnhancers} from \"./utils\";\r\nimport {rootReducer} from \"./root-reducer\";\r\n\r\nconst middlewares: Array<Middleware> = [];\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\nconst initialState = {};\r\n\r\nexport const store = createStore(rootReducer, initialState, enhancer);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nimport {App} from \"./views/App\";\r\nimport {store} from \"./state/store\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}